I"P(<h2 id="continuous-integration">Continuous Integration</h2>

<ul>
  <li>The practice of merging in small code changes frequently</li>
  <li>The goal is to build healthier software by developing and testing in smaller increments.</li>
</ul>

<hr />

<h3 id="travis-ci">Travis-CI</h3>

<ul>
  <li><em>supports</em> your development process by automatically building and testing code changes, providing immediate feedback on the success of the change.</li>
  <li><em>automate</em> other parts of your development process by managing deployments and notifications.</li>
</ul>

<hr />

<h3 id="core-concepts">Core Concepts</h3>

<ul>
  <li><em>phase</em>:  the sequential steps of a job. For example, the <code class="highlighter-rouge">install</code> phase,  <code class="highlighter-rouge">script</code> phase,  <code class="highlighter-rouge">deploy</code> phase.</li>
  <li><em>job</em>: an automated process that carries out a series of <code class="highlighter-rouge">phases</code> such as compiling your code, running tests.</li>
</ul>

<hr />

<ul>
  <li><em>build</em>:  a group of <code class="highlighter-rouge">jobs</code>.  A <em>build</em> finishes when all of its <code class="highlighter-rouge">jobs</code> are finished</li>
  <li><em>stage</em>: a group of <code class="highlighter-rouge">jobs</code>that run in parallel as part of a sequential build process composed of multiple <code class="highlighter-rouge">stages</code>.</li>
</ul>

<hr />

<h3 id="broken-build">Broken Build</h3>

<ul>
  <li><em>errored</em>:  a command in the <code class="highlighter-rouge">before_install</code>, <code class="highlighter-rouge">install</code>, or <code class="highlighter-rouge">before_script</code> phase returned a non-zero exit code.</li>
  <li><em>failed</em>:  a command in the <code class="highlighter-rouge">script</code> phase returned a non-zero exit code.</li>
  <li><em>canceled</em>:   a user cancels the job before it completes.</li>
</ul>

<hr />

<h3 id="job-lifecycle">Job Lifecycle</h3>

<ul>
  <li><em>install</em> : install any dependencies required</li>
  <li><em>script</em> : run the build script and the test script
```memrid</li>
</ul>

<hr />

<h3 id="customizing--phase">Customizing  Phase</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">install</span><span class="pi">:</span> <span class="s">./install-dependencies.sh</span>

<span class="na">install</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">bundle install --path vendor/bundle</span>
  <span class="pi">-</span> <span class="s">npm install</span>
  
<span class="na">script</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">bundle exec rake build</span>
  <span class="pi">-</span> <span class="s">bundle exec rake builddoc</span>

<span class="na">script</span><span class="pi">:</span> <span class="s">bundle exec rake build &amp;&amp; bundle exec rake builddoc</span>
</code></pre></div></div>

<hr />

<h3 id="build-matrix">Build Matrix</h3>

<ul>
  <li><em>combine</em> a language-and-environment dependent set of configuration options to automatically create a matrix of all possible combinations</li>
  <li><em>specify</em> the exact combination of configurations you want in <code class="highlighter-rouge">matrix.include</code></li>
</ul>

<hr />

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">rvm</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="m">2.5</span>
  <span class="pi">-</span> <span class="m">2.2</span>
<span class="na">gemfile</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">gemfiles/Gemfile.rails-3.2.x</span>
  <span class="pi">-</span> <span class="s">gemfiles/Gemfile.rails-3.0.x</span>
<span class="na">env</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">ISOLATED=true</span>
  <span class="pi">-</span> <span class="s">ISOLATED=false</span>
</code></pre></div></div>

<hr />

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span> <span class="s">//exclude</span>
  <span class="pi">-</span> <span class="na">rvm</span><span class="pi">:</span> <span class="m">2.5</span>
    <span class="na">gemfile</span><span class="pi">:</span> <span class="s">gemfiles/Gemfile.rails-3.2.x</span>
    <span class="na">env</span><span class="pi">:</span> <span class="s">ISOLATED=false</span>
  <span class="pi">-</span> <span class="na">rvm</span><span class="pi">:</span> <span class="m">2.2</span>
    <span class="na">gemfile</span><span class="pi">:</span> <span class="s">gemfiles/Gemfile.rails-3.0.x</span>
    <span class="na">env</span><span class="pi">:</span> <span class="s">ISOLATED=true</span>
</code></pre></div></div>
<hr />

<h3 id="using-different-programming-language">Using different Programming Language</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">dist</span><span class="pi">:</span> <span class="s">xenial</span>
<span class="na">language</span><span class="pi">:</span> <span class="s">php</span>
<span class="na">php</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s1">'</span><span class="s">5.6'</span>
<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">include</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">language</span><span class="pi">:</span> <span class="s">python</span>
      <span class="na">python</span><span class="pi">:</span> <span class="m">3.6</span>
      <span class="na">script</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="s">python -c "print('Hi from Python!')"</span>
</code></pre></div></div>

<hr />

<h3 id="build-stage">Build Stage</h3>

<p>A way to group jobs, and run jobs in each stage in parallel, but run one stage after another sequentially.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">jobs</span><span class="pi">:</span>
<span class="na">include</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">stage</span><span class="pi">:</span> <span class="s">test</span>
    <span class="na">script</span><span class="pi">:</span> <span class="s">./test </span><span class="m">1</span>
    <span class="na">script</span><span class="pi">:</span> <span class="s">./test </span><span class="m">2</span>
  <span class="pi">-</span> <span class="na">stage</span><span class="pi">:</span> <span class="s">deploy</span>
    <span class="na">script</span><span class="pi">:</span> <span class="s">./deploy</span>
</code></pre></div></div>

<hr />

<h3 id="specifying-stage-oder">Specifying Stage Oder</h3>

<p>specify the order for stages in the section stages</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">stages</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">compile</span>
  <span class="pi">-</span> <span class="s">test</span>
  <span class="pi">-</span> <span class="s">deploy</span>
</code></pre></div></div>

<hr />

<h3 id="conditional-builds-stages-and-jobs">Conditional Builds, Stages and Jobs</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">// Add `if:branch=master`</span>

<span class="na">stages</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">deploy</span>
    <span class="na">if</span><span class="pi">:</span> <span class="s">branch = master</span>
</code></pre></div></div>

<hr />

<h2 id="get-start">Get Start</h2>

<ul>
  <li><em>Go</em> to <a href="https://travis-ci.com/">Travis-ci.com</a> and <a href="https://travis-ci.com/signin"><em>Sign up with GitHub</em></a>.</li>
  <li>Accept the Authorization of Travis CI.</li>
  <li>Click the green <em>Activate</em> button and select the repositories you want to use with Travis CI.</li>
  <li>Add a <code class="highlighter-rouge">.travis.yml</code> file to your repository, git commit and push to trigger a Travis CI build.</li>
</ul>

<hr />

<h3 id="build-specific-branched">Build Specific Branched</h3>

<p>Add safelist and blocklist</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># blocklist</span>
<span class="na">branches</span><span class="pi">:</span>
  <span class="na">except</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">legacy</span>
  <span class="pi">-</span> <span class="s">experimental</span>

<span class="c1"># safelist</span>
<span class="na">branches</span><span class="pi">:</span>
  <span class="na">only</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">master</span>
  <span class="pi">-</span> <span class="s">stable</span>
</code></pre></div></div>

<hr />

<h3 id="installing-a-second-language">Installing a Second Language</h3>

<p>In the <code class="highlighter-rouge">before_install </code> stage of the build</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">language</span><span class="pi">:</span> <span class="s">python</span>

<span class="na">before_install</span><span class="pi">:</span>
<span class="pi">-</span> <span class="s">rvm install 2.1.5</span>

<span class="na">language</span><span class="pi">:</span> <span class="s">node_js</span>

<span class="na">before_install</span><span class="pi">:</span>
<span class="pi">-</span> <span class="s">phpenv global </span><span class="m">7.0</span>
</code></pre></div></div>

<hr />

<h3 id="use-docker">Use docker</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">services</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">docker</span>

</code></pre></div></div>

<ul>
  <li>docker push/pull</li>
  <li>docker build …</li>
</ul>

:ET